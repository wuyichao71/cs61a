(define (make-make-or)
  `(define (make-or expr1 expr2)
     (let ((v1 expr1))
       (if v1 v1 expr2)))
  )

(make-make-or)
(eval (make-make-or))
(eval (eval (make-make-or)))
(apply (eval (eval (make-make-or))) '(#t (/ 1 0)))
(eval (apply (eval (eval (make-make-or))) '(#t (/ 1 0))))
